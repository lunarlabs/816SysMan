; generic node functions.
; These will never be called using COP traps, so we can make some assumptions:
;
; - This was called within bank zero, so we won't need to use RTL
; - No flags need to be pushed/pulled from stack
; - the accumulator and index registers are 16 bits
; - calling function doesn't care about the accumulator

.scope nodes
        returnAddr  = 2     ;the return address's offset from the stack pointer.

.struct Node
        nextPtr     .addr
        prevPtr     .addr
        type        .byte
        priority    .byte
        namePtr     .addr
.endstruct

.struct Header
        headPtr     .addr       ;if zero, this is an empty list.
        dummy1      .addr       ;This is always zero, to let a search action know when it's reached the header.
        tailPtr     .addr       ;if headPtr=tailPtr, there's only one node
        type        .byte
        dummy2      .byte
.endstruct 

.code

; Moves the CurrentNode pointer to the node specified in the origin's nextPtr.
; STATUS FLAGS: Sets c if the returned node is the header (that is, the origin was the tail), clears it otherwise.
;               Sets z if CurrentNode points to the header of an empty list.
.proc   NextNode

.endproc

.endscope