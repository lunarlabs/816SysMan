;   Main build file for 816 System Manager

.p816
.macpack generic
.macpack longbranch

.include "macro/tweaks.a65"
.include "macro/scope.a65"
.include "asm/nodes.a65"
.include "asm/memmgmt.a65"

.import _boot
.export _node_size = .sizeof(nodes::Node)

.segment "SYSDP" : zeropage
CurrentList: .res $2
CurrentNode: .res $2
APIOffset: .res $2
FreeMemTable: .res $2
InterruptTable: .res $2
RunningProcessQueue: .res $2
WaitingProcessTable: .res $2
DeviceTable: .res $2
FileSystemTable: .res $2

.data
FirstMemoryEntry: .res .sizeof(MemoryManagement::MemoryTableEntry), $00
FirstNode: .res .sizeof(nodes::Node), $00


.code

.proc KernelRq
    ai16
    pha
    phx
    phy     ;pushes registers to stack
    ei

    and $00ff
    beq InvalidAPI

    dec a
;    cmp #maxapi
    bcs InvalidAPI

    asl A
    tax
    sta APIOffset
    jmp (APITableLocation,x)

.endproc

.proc InvalidAPI
.endproc

.rodata
APITableLocation:
.asciiz "System Manager for 65C816"

.segment "VECTORS"
.word $ffff, $ffff  ;unused native vectors
.ifdef KernelRq
    .word KernelRq      ;Native COP vector
.else
    .error "Not doing anything without a KernelRq!"
.endif
.ifdef GotoBreak
    .word GotoBreak     ;Native BRK vector
.else
    .warning "No BRK vector defined!"
    .word $ffff
.endif
.word $ffff         ;ABORT line is not used
.ifdef StartDebug
    .word StartDebug    ;NMI vector
.else
    .warning "No NMI vector defined, using reset vector"
    .word _boot
.endif
.word $ffff         ;unused
;.ifdef InterruptRq
;    .word InterruptRq
;.else
;    .error "Not doing anything without an InterruptRq!"
;.endif
.word $ffff

; Aside from system initialization, we don't use emulation mode.
.word $ffff, $ffff, $ffff, $ffff, $ffff, $ffff
.word _boot  ;RESET vector
.word $ffff